package recursion

/**
 *
 * 我们先来看一个非常经典的游戏—汉诺塔，该游戏是数学家爱德华卢卡斯于1883年发明的，
 * 游戏的规则如下，有三根细柱（A、B、C），A柱上套着6个圆盘，圆盘的大小都不一样，
 * 它们按照从大到小的顺序自下而上地摆放，现在我们需要把A柱上的圆盘全部移动到B柱上去，并且在移动时有如下约定：
 * 一次只能移动柱子最上端的一个圆盘。
 * 小圆盘上不能放大圆盘
 * 此时约定将一个圆盘从一根柱子移动另一根柱子算移动“1”次，那么将6个圆盘全部从A移动到B至少需要移动多少次呢？
 *
 **/


fun move(n: Int): Int {
    if (n == 0) return 0
    return 1 + 2 * move(n - 1)
}

fun main(args: Array<String>) {
    println(move(3))
}